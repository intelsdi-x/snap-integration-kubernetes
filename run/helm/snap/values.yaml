## Snap Docker image
## ref: https://hub.docker.com/r/intelsdi/snap4kube/tags/
##
image:
  repo: intelsdi/snap4kube
  tag: monitoring
  pullPolicy: Always

## Privileged mode for Snap daemonset
## ref: https://kubernetes.io/docs/user-guide/pods/#privileged-mode-for-pod-containers
privileged: true

## Snap log level
## ref: https://github.com/intelsdi-x/snap/blob/master/docs/SNAPTELD_CONFIGURATION.md#snapteld-configuration
## 
config:
  log_level: 3
  gomaxprocs: 1

## InfluxDB configuration:
##
influxdb:
  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    enabled: false
    ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
    ## Default: volume.alpha.kubernetes.io/storage-class: default
    ##
    # storageClass:
    # accessMode: ReadWriteOnce
    # size: 8Gi  
  
  setDefaultUser:
    user:
      ## The user name
      ## Default: "admin"
      username: "root"

      ## User password
      ## Default: Randomly generated 10 characters of Ascii
      password: "root"

      ## User privileges
      ## Default: "WITH ALL PRIVILEGES"
      privileges: "WITH ALL PRIVILEGES"
                          
## Grafana configuration:
##
grafana:
  server:
    adminUser: root 
    adminPassword: root

    imagePullPolicy: IfNotPresent

    ## Set datasource in beginning
    setDatasource:
      ## If true, an initial Grafana Datasource will be set
      ## Default: false
      ##
      enabled: true

      ## How long should it take to commit failure
      ## Default: 300
      ##
      activeDeadlineSeconds: 300

      ## Curl Docker image
      ## Default: appropriate/curl:latest
      ##
      image: appropriate/curl:latest

      restartPolicy: OnFailure

      ## This assembles how curl post into Grafana
      ## Ref1: http://docs.grafana.org/reference/http_api/#create-data-source
      ## Ref2: https://github.com/grafana/grafana/issues/1789
      ##
      datasource:
        name: snap 
        type: influxdb
        access: proxy
        url: "http://monitoring-influxdb:8086"
        isDefault: true
        database: snap
        influxdb:
          user: root
          password: root
          database: snap

    ## Grafana service type
    ##
    serviceType: NodePort

    # Persist data to a persitent volume
    persistentVolume:
      ## If true, Grafana will create a Persistent Volume Claim
      ## If false, use emptyDir
      ##
      enabled: false

      ## Grafana data Persistent Volume access modes
      ## Must match those of existing PV or dynamic provisioner
      ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
      ##
      accessModes:
        - ReadWriteOnce

      ## Server data Persistent Volume annotations
      ##
      # annotations:

      ## Grafana data Persistent Volume size
      ## Default: 1Gi
      ##
      size: 1Gi

      ## Data Persistent Volume Storage Class
      ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
      ## Default: volume.alpha.kubernetes.io/storage-class: default
      ##
      # storageClass:

    ## Alerting
    alerting:
      # Critical level of cpu, memory and filesystem usage
      # per pods and nodes.
      pods:
        # CPU usage value in percentage, memory and filesystem in bytes
        cpu_usage: 90
        memory_usage: 50000000000
        filesystem_usage: 50000000000
      nodes:
        # CPU usage value in percentage, memory and filesystem in bytes
        cpu_usage: 90
        memory_usage: 20000000000
        filesystem_usage: 20000000000

